openapi: 3.1.0
info:
  version: 7.0.0
  title: "Aurora AI Chat REST API"
  description: "REST API used in storing and executing AI chat completions in a personalized and conversational manner. It comes with support for streaming chat responses."
  contact:
    name: "Antonios Papadakis"
    email: "bdpaboi123@gmail.com"

servers:
  - url: "https://chat-api.aurora-interactive.online:8443"
    description: "Main API Server"

x-speakeasy-retries:
  strategy: backoff
  backoff:
    initialInterval: 1000
    maxInterval: 60000
    maxElapsedTime: 3600000
    exponent: 1.2
  statusCodes:
    - 5XX
  retryConnectionErrors: true

x-speakeasy-globals:
  parameters:
    - $ref: "#/components/parameters/AccessToken"

paths:
  x-speakeasy-errors:
    statusCodes:
      - 5XX

  /api/v7/login:
    post:
      summary: "Login"
      description: "Login and retrieve an access token for use with the API"
      x-speakeasy-usage-example: true
      operationId: "users.login"
      x-speakeasy-group: "users"
      x-speakeasy-name-override: "login"
      tags: ["Users"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ["username", "password"]
              properties:
                username:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: "Access token to be used with the rest of the API"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenResponse"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

  /api/v7/user/info:
    get:
      summary: "Get User Info"
      description: "Get personal account metadata. Useful for pre-filling update fields for when the user wants to update account data"
      x-speakeasy-usage-example: true
      operationId: "users.getUserInfo"
      x-speakeasy-group: "users"
      x-speakeasy-name-override: "userData"
      tags: ["Users"]
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      
      responses:
        "200":
          description: "User info"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfo"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

    put:
      summary: "Update account information"
      description: "Update information such as your email and username"
      x-speakeasy-usage-example: true
      operationId: "users.setUserInfo"
      x-speakeasy-group: "users"
      x-speakeasy-name-override: "userData"
      tags: ["Users"]
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserInfo"

      responses:
        "200":
          description: "Update account information successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulRequest"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

  /api/v7/signup:
    post:
      summary: "User signup"
      description: "Create an account"
      operationId: "users.signup"
      x-speakeasy-group: "users"
      x-speakeasy-name-override: "signup"
      tags: ["Users"]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: ["username", "email", "password"]
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string

      responses:
        "200":
          description: "Access token to be used with the rest of the API"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessTokenResponse"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

  /api/v7/characters:
    get:
      summary: "Character metadata"
      description: "Get data for available characters in the system. Paginated. Up to 100 characters per request"
      x-speakeasy-usage-example: true
      operationId: "characters.list"
      x-speakeasy-group: "characters"
      x-speakeasy-name-override: "list"
      tags:
        - Characters
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - name: "numCharacters"
          in: query
          required: true
          schema:
            type: integer
          example: 25
        - name: "from"
          in: query
          description: "Character ID to start results from (useful in pagination)"
          required: false
          schema:
            type: integer
          example: 150

      responses:
        "200":
          description: "A JSON array of character metadata for each character"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessfulRequest"
                  - type: object
                    required: ["characters", "isEndOfList"]
                    properties:
                      characters:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/CharacterOverview"
                            - type: object
                              required: ["isOfficial", "id"]
                              properties:
                                isOfficial:
                                  type: boolean
                                id:
                                  type: integer
                      isEndOfList:
                        type: boolean
                        summary: "Whether there aren't any more characters left to query"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

  /api/v7/chats:
    get:
      summary: "Get all chats assigned to a user"
      description: "Get chat IDs assigned to a user ID"
      x-speakeasy-usage-example: true
      operationId: "chats.list"
      x-speakeasy-group: "chats"
      x-speakeasy-name-override: "list"
      tags:
        - Chats
      parameters:
        - $ref: "#/components/parameters/AccessToken"

      responses:
        "200":
          description: "JSON array of chat info"
          content:
            application/json:
              schema:
                allOf:
                - $ref: "#/components/schemas/SuccessfulRequest"
                - type: object
                  required: ["chats"]
                  properties:
                    chats:
                      type: array
                      items:
                        allOf:
                        - $ref: "#/components/schemas/CharacterId"
                        - $ref: "#/components/schemas/ChatId"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

  /api/v7/chat/preview:
    get:
      summary: "Get the latest message from the given chat"
      operationId: "chats.preview"
      x-speakeasy-group: "chats"
      x-speakeasy-name-override: "preview"
      tags:
        - Chats
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/ChatId"
      responses:
        "200":
          description: "Latest message in the given chat, useful as a preview"
          content:
            application/json:
              schema:
                type: object
                required: ["content", "timestamp"]
                properties:
                  content:
                    type: string
                  timestamp:
                    type: integer

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

  /api/v7/chat:
    post:
      summary: "Initialize chat with AI character"
      description: "Initialize a chat with a given AI character, including storing the character's initial response as a message in our system."
      x-speakeasy-usage-example: true
      operationId: "chats.initialize"
      x-speakeasy-group: "chats"
      x-speakeasy-name-override: "initialize"
      tags:
        - Chats
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CharacterId"

      responses:
        "200":
          description: "Chat initialized successfully with the given AI initialization data"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessfulRequest"
                  - $ref: "#/components/schemas/ChatId"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

    delete:
      summary: "Delete a chat"
      description: "Delete a chat by ID. All messages in the chat are also deleted."
      x-speakeasy-usage-example: true
      operationId: "chats.delete"
      x-speakeasy-group: "chats"
      x-speakeasy-name-override: "delete"
      tags:
        - Chats
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/ChatId"

      responses:
        "200":
          description: "Chat and all relevant data deleted successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulRequest"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

  /api/v7/message/save:
    post:
      summary: "Save chat message"
      description: "Save chat message after AI response"
      x-speakeasy-usage-example: true
      operationId: "messages.save"
      x-speakeasy-group: "messages"
      x-speakeasy-name-override: "save"
      tags:
        - Messages
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/ChatId"
                - $ref: "#/components/schemas/TimestampedMessage"

      responses:
        "200":
          description: "Message saved successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessfulRequest"
                  - type: object
                    required: ["id"]
                    properties:
                      id:
                        type: integer

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

  /api/v7/message/history:
    get:
      summary: "Get full message history"
      description: "Get user-facing chat transcript. Does not include special messages (enhanced context) or system messages."
      operationId: "messages.history"
      x-speakeasy-group: "messages"
      x-speakeasy-name-override: "history"
      tags:
        - Messages
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/ChatId"

      responses:
        "200":
          description: "JSON array of chat messages"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessfulRequest"
                  - type: object
                    required: ["messages"]
                    properties:
                      messages:
                        type: array
                        items:
                          allOf:
                            - $ref: "#/components/schemas/TimestampedMessage"
                            - type: object
                              required: ["id"]
                              properties:
                                id:
                                  type: integer

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

  /api/v7/character:
    get:
      summary: "Get information about a character"
      operationId: "characters.get"
      x-speakeasy-group: "characters"
      x-speakeasy-name-override: "get"
      tags:
        - Characters
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/CharacterId"
      
      responses:
        "200":
          description: "Character data"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CharacterOverview"
                  - type: object
                    required: ["isOfficial"]
                    properties:
                      isOfficial:
                        type: boolean

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

    post:
      summary: "Create character"
      description: "Upload character data to our system"
      x-speakeasy-usage-example: true
      operationId: "characters.create"
      x-speakeasy-group: "characters"
      x-speakeasy-name-override: "create"
      tags:
        - Characters
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CharacterOverview"
                - type: object
                  required: ["aiPrompt", "initialResponse", "specialMessages", "banner", "icon"]
                  properties:
                    aiPrompt:
                      type: string
                    initialResponse:
                      type: string
                    banner:
                      type: string
                      description: "base64-encoded AVIF image"
                      examples: ["AAAAbx"]
                    icon:
                      type: string
                      description: "base64-encoded AVIF image"
                      examples: ["AAAAbx"]
                    specialMessages:
                      type: array
                      items:
                        type: object
                        required: ["startsWith", "endsWith", "prompt"]
                        properties:
                          startsWith:
                            type: string
                          endsWith:
                            type: array
                            items:
                              type: string
                          prompt:
                            type: string

      responses:
        "200":
          description: "Character was created successfully"
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/SuccessfulRequest"
                  - $ref: "#/components/schemas/CharacterId"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

  /api/v7/message:
    post:
      summary: "Send message"
      description: "Send a message to a particular chat for a response"
      x-speakeasy-usage-example: true
      operationId: "messages.send"
      x-speakeasy-group: "messages"
      x-speakeasy-name-override: "send"
      tags:
        - Messages
      parameters:
        - $ref: "#/components/parameters/AccessToken"
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CharacterId"
                - $ref: "#/components/schemas/ChatId"
                - type: object
                  required: ["message"]
                  properties:
                    message:
                      type: string

      responses:
        "200":
          description: "Server Sent Events stream of JSON data of each token as it becomes available, as shown in the documented example. On the stream.on(\"end\") event, no new data is sent."
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/ChatCompletionFragment"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

    delete:
      summary: "Delete message"
      description: "Remove message from message history by ID"
      operationId: "messages.delete"
      x-speakeasy-group: "messages"
      x-speakeasy-name-override: "delete"
      tags:
        - Messages
      parameters:
        - $ref: "#/components/parameters/AccessToken"
        - $ref: "#/components/parameters/MessageId"

      responses:
        "200":
          description: "Message was deleted successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SuccessfulRequest"

        "400":
          $ref: "#/components/responses/DefaultBadRequest"

        "401":
          $ref: "#/components/responses/DefaultUnauthorizedResponse"

        "402":
          $ref: "#/components/responses/DefaultBadStandingResponse"

components:
  responses:
    DefaultBadRequest:
      description: "Bad request"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/InvalidRequestResponse"

    DefaultUnauthorizedResponse:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthenticationFailedResponse"

    DefaultBadStandingResponse:
      description: "User is not paying for a subscription"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AccountInBadStandingResponse"

  parameters:
    MessageId:
      name: "messageId"
      in: query
      required: true
      schema:
        type: integer
      example: 8

    ChatId:
      name: "chatId"
      in: query
      required: true
      schema:
        type: integer
      example: 8

    AccessToken:
      name: "x-access-token"
      x-speakeasy-name-override: "accessToken"
      in: header
      required: true
      schema:
        type: string
      examples:
        sampleAccessToken:
          summary: "Secret token that allows the user to use authenticated API endpoints"
          value: wcdE8dGPZEshG6B8E5uGpgALr5LzwPX5AqZFKAZsfcvzuHVf
      x-speakeasy-globals-hidden: true

    CharacterId:
      name: "characterId"
      in: query
      required: true
      schema:
        type: integer
      example: 8

  schemas:
    UnauthorizedIdResponse:
      x-speakeasy-name-override: "UnauthorizedIdError"
      allOf:
        - $ref: "#/components/schemas/FailedRequest"
        - type: object
          description: "Given resource ID does not belong to the given user"
          required: ["error"]
          properties:
            error:
              type: string
              enum: ["Chat or message does not belong to this user"]

    DuplicateSignupError:
      type: object
      required: ["error"]
      properties:
        error:
          type: string
          enum: ["Username or email already in use"]

    AccountInBadStandingResponse:
      title: "Account In Bad Standing Error"
      x-speakeasy-name-override: "AccountInBadStandingError"
      allOf:
        - $ref: "#/components/schemas/FailedRequest"
        - type: object
          description: "Given user is not allowed to use the API, usually because they don't have an active subscription to our services"
          required: ["error"]
          properties:
            error:
              type: string
              enum: ["Account associated with this access token is not subscribed to a paid plan"]

    AuthenticationFailedResponse:
      x-speakeasy-name-override: "AuthenticationFailedError"
      allOf:
        - $ref: "#/components/schemas/FailedRequest"
        - type: object
          description: "The given access token is invalid"
          required: ["error"]
          properties:
            error:
              type: string
              enum: ["Invalid username, password, or access token"]

    InvalidRequestResponse:
      x-speakeasy-name-override: "BadRequestError"
      allOf:
        - $ref: "#/components/schemas/FailedRequest"
        - type: object
          description: "One or more request parameters are malformed or invalid"
          required: ["error"]
          properties:
            error:
              type: string
              enum: ["One or more API parameters are malformed. Please check your request and try again"]

    InvalidMessageId:
      x-speakeasy-name-override: "InvalidMessageIdError"
      allOf:
        - $ref: "#/components/schemas/FailedRequest"
        - type: object
          required: ["error"]
          properties:
            error:
              type: string
              enum: ["Invalid message ID"]

    InvalidChatId:
      x-speakeasy-name-override: "InvalidChatIdError"
      type: object
      required: ["error"]
      properties:
        error:
          type: string
          enum: ["Invalid chat ID"]

    AccessTokenResponse:
      x-speakeasy-name-override: "AccessTokenObj"
      allOf:
        - $ref: "#/components/schemas/SuccessfulRequest"
        - type: object
          required: ["accessToken"]
          properties:
            accessToken:
              type: string

    CharacterOverview:
      type: object
      required: ["name", "description"]
      properties:
        name:
          type: string
        description:
          type: string

    CharacterId:
      type: object
      required: ["characterId"]
      properties:
        characterId:
          type: integer

    ChatId:
      type: object
      required: ["chatId"]
      properties:
        chatId:
          type: integer

    Message:
      title: "Messages Response"
      type: object
      required: ["role", "content"]
      properties:
        role:
          type: string
          enum: ["system", "user", "assistant"]
        content:
          type: string

    ChatCompletionFragment:
      type: object
      required: ["data"]
      properties:
        data:
          type: object
          required: ["content"]
          properties:
            content:
              type: string

    TimestampedMessage:
      title: "Timestamped Message Response"
      allOf:
        - $ref: "#/components/schemas/Message"
        - type: object
          required: ["timestamp"]
          properties:
            timestamp:
              type: integer

    SuccessfulRequest:
      title: "Successful Request"
      type: object
      required: ["success"]
      properties:
        success:
          type: boolean
          default: true

    FailedRequest:
      title: "Failed Request"
      type: object
      required: ["success"]
      properties:
        success:
          type: boolean
          default: false

    UserInfo:
      type: object
      required: ["username", "email"]
      properties:
        username:
          type: string
        email:
          type: string

tags:
  - name: "Characters"
    description: "Endpoints used in querying information about AI characters"

  - name: "Users"
    description: "Endpoints used in querying or updating information about users in the system"

  - name: "Chats"
    description: "Endpoints used in querying or updating information about chats in the system"

  - name: "Messages"
    description: "Endpoints used in querying or updating messages that have been stored in chat history"